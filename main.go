package main

import (
	//"misteraladin.com/jasmine/rate-structure-new/app/rate-backoffice/interfaces"
	"fmt"
	"log"
	routes "exchange-currency/app"
	CERepo "exchange-currency/app/currency-exchange/repository"
	CEUcase "exchange-currency/app/currency-exchange/usecase"
	DCERepo "exchange-currency/app/daily-currency-exchange/repository"
	DCEUcase "exchange-currency/app/daily-currency-exchange/usecase"
	"exchange-currency/config"
	"exchange-currency/db"

	_ "exchange-currency/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

var appConfig = config.Config.App

func main() {
	r := gin.New()

	r.Use(gin.Logger())
	r.Use(gin.Recovery())

	//CORS
	r.Use(cors.New(cors.Config{
		//AllowOrigins: []string{"*"},
		AllowAllOrigins: true,
		AllowMethods:    []string{"GET", "HEAD", "PUT", "PATCH", "POST", "DELETE"},
	}))

	//setting database connection
	db := gorm.MysqlConn()

	//setting up Currency Exchange routes
	cr := CERepo.NewCERepository(db)
	cu := CEUcase.NewCurrencyExchangeUsecase(cr)
	routes.NewCEHttpHandler(r, cu)

	//setting up Daily Currency Exchange routes
	dcr := DCERepo.NewDCERepository(db)
	dcu := DCEUcase.NewDailyCurrencyExchangeUsecase(dcr, cr)
	routes.NewDCEHttpHandler(r, dcu)

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Server
	if err := r.Run(fmt.Sprintf("%s:%s", appConfig.HttpAddr, appConfig.HttpPort)); err != nil {
		log.Fatal(err)
	}
}
